<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.baofeng.blog.mapper.admin.CategoryMapper">
    <!-- 基础结果映射 -->
    <resultMap id="BaseResultMap" type="com.baofeng.blog.entity.admin.Category">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <!-- 分类分页查询的结果映射 -->
    <resultMap id="CategoryPageResultMap" type="com.baofeng.blog.vo.admin.CategoryPageVO$CategoryVO">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="articleCount" column="article_count"/>
        <result property="createTime" column="created_at"/>
        <result property="updateTime" column="updated_at"/>
    </resultMap>

    <!-- 创建分类 -->
    <insert id="createCategory" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO categories (
            name, description, created_at, updated_at
        ) VALUES (
            #{name}, #{description}, NOW(), NOW()
        )
    </insert>

    <!-- 根据名称查询分类 -->
    <select id="getCategoryByName" resultMap="BaseResultMap">
        SELECT * FROM categories WHERE name = #{name} LIMIT 1
    </select>

    <!-- 根据ID查询分类 -->
    <select id="getCategoryById" resultMap="BaseResultMap">
        SELECT * FROM categories WHERE id = #{id}
    </select>

    <!-- 获取分类下的文章数量 -->
    <select id="getArticleCount" resultType="int">
        SELECT COUNT(*) FROM articles WHERE category_id = #{id}
    </select>

    <!-- 删除分类 -->
    <delete id="deleteCategory">
        DELETE FROM categories WHERE id = #{id}
    </delete>

    <!-- 分页查询分类列表 -->
    <select id="getCategoryPage" resultMap="CategoryPageResultMap">
        SELECT 
            c.id, c.name, c.description, 
            c.created_at, c.updated_at,
            COUNT(a.id) as article_count
        FROM categories c
        LEFT JOIN articles a ON c.id = a.category_id
        <where>
            <if test="keyword != null and keyword != ''">
                AND (c.name LIKE CONCAT('%', #{keyword}, '%') 
                OR c.description LIKE CONCAT('%', #{keyword}, '%'))
            </if>
        </where>
        GROUP BY c.id, c.name, c.description, c.created_at, c.updated_at
        ORDER BY c.created_at DESC
    </select>
</mapper> 